!function(){"use strict";function n(n){function o(n,o){return{error:function(r,e){n.error(r,e),o.error(r,e)},info:function(r){n.info(r),o.info(r)},warn:function(r){n.warn(r),o.warn(r)},debug:function(r){n.debug(r),o.debug(r)},log:function(r){n.log(r),o.info(r)}}}n.decorator("$log",o),o.$inject=["$delegate","shadowLogger"]}var o=angular.module("shadowLogger",[]);o.config(n),n.$inject=["$provide"]}();
!function(){"use strict";function n(){this.setOptions=function(n){r=$.extend(r,n,!0)},this.$get=function(){return o()}}function o(){function n(n){r.logAlert?alert(n):console?console.log(n):alert(n)}return{error:function(o,t){n(o)},info:function(o){n(o)},debug:function(o){n(o)},warn:function(o){n(o)},log:function(o){n(o)}}}var t=angular.module("shadowLogger");t.provider("shadowLogger",n);var r={loggingUrl:"",infoMessage:"kirk",logAlert:!1}}();

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNoYWRvd0xvZ2dlci5tb2R1bGUuanMiLCJzaGFkb3dsb2dnZXIucHJvdmlkZXIuanMiLCJzaGFkb3dsb2dnZXIuc2VydmljZS5qcyJdLCJuYW1lcyI6WyJjb25maWciLCIkcHJvdmlkZSIsImxvZ0RlY29yYXRvciIsIiRkZWxlZ2F0ZSIsInNoYWRvd0xvZ2dlciIsImVycm9yIiwiZXhjZXB0aW9uIiwibWVzc2FnZSIsImluZm8iLCJ3YXJuIiwiZGVidWciLCJsb2ciLCJkZWNvcmF0b3IiLCIkaW5qZWN0IiwiYXBwIiwiYW5ndWxhciIsIm1vZHVsZSIsInNoYWRvd0xvZ2dlclByb3ZpZGVyIiwidGhpcyIsInNldE9wdGlvbnMiLCJ1c2VyT3B0aW9ucyIsIm9wdGlvbnMiLCIkIiwiZXh0ZW5kIiwiJGdldCIsImxvZ0FsZXJ0IiwiYWxlcnQiLCJjb25zb2xlIiwicHJvdmlkZXIiLCJsb2dnaW5nVXJsIiwiaW5mb01lc3NhZ2UiXSwibWFwcGluZ3MiOiJDQUFBLFdBQ0MsWUFLQSxTQUFTQSxHQUFPQyxHQUlmLFFBQVNDLEdBQWFDLEVBQVVDLEdBQzlCLE9BQ0NDLE1BQU0sU0FBU0MsRUFBVUMsR0FDeEJKLEVBQVVFLE1BQU1DLEVBQVVDLEdBQzFCSCxFQUFhQyxNQUFNQyxFQUFVQyxJQUU5QkMsS0FBSyxTQUFTRCxHQUNiSixFQUFVSyxLQUFLRCxHQUNmSCxFQUFhSSxLQUFLRCxJQUVuQkUsS0FBSyxTQUFTRixHQUNaSixFQUFVTSxLQUFLRixHQUNoQkgsRUFBYUssS0FBS0YsSUFFcEJHLE1BQU0sU0FBU0gsR0FDWkosRUFBVU8sTUFBTUgsR0FDakJILEVBQWFNLE1BQU1ILElBRXBCSSxJQUFJLFNBQVNKLEdBQ1hKLEVBQVVRLElBQUlKLEdBQ2ZILEVBQWFJLEtBQUtELEtBdkJuQk4sRUFBU1csVUFBVSxPQUFRVixHQUM5QkEsRUFBYVcsU0FBVyxZQUFZLGdCQU5yQyxHQUFJQyxHQUFNQyxRQUFRQyxPQUFPLGtCQUV6QkYsR0FBSWQsT0FBT0EsR0FDWEEsRUFBT2EsU0FBVztDQ0xuQixXQUNFLFlBS0UsU0FBU0ksS0FDUEMsS0FBS0MsV0FBYSxTQUFTQyxHQUN2QkMsRUFBVUMsRUFBRUMsT0FBT0YsRUFBUUQsR0FBWSxJQUUxQ0YsS0FBS00sS0FBTyxXQUNMLE1BQU9wQixNQVVqQixRQUFTQSxLQW9CVCxRQUFTTyxHQUFJSixHQUNSYyxFQUFRSSxTQUNUQyxNQUFNbkIsR0FFQW9CLFFBQ05BLFFBQVFoQixJQUFJSixHQUdWbUIsTUFBTW5CLEdBMUJYLE9BQ0NGLE1BQU0sU0FBU0MsRUFBVUMsR0FDdkJJLEVBQUlMLElBRU5FLEtBQUssU0FBU0QsR0FDVkksRUFBSUosSUFFUkcsTUFBTSxTQUFTSCxHQUNiSSxFQUFJSixJQUVORSxLQUFLLFNBQVNGLEdBQ1pJLEVBQUlKLElBRU5JLElBQUksU0FBU0osR0FDWEksRUFBSUosS0FuQ1gsR0FBSU8sR0FBTUMsUUFBUUMsT0FBTyxlQUV0QkYsR0FBSWMsU0FBUyxlQUFlWCxFQVU1QixJQUFJSSxJQUNGUSxXQUFXLEdBQ1hDLFlBQVksT0FDWkwsVUFBUztBQ2pCZiIsImZpbGUiOiJzaGFkb3dMb2dnZXIubWluLmpzIiwic291cmNlc0NvbnRlbnQiOlsiKGZ1bmN0aW9uKCl7XHJcblx0XCJ1c2Ugc3RyaWN0XCJcclxuXHR2YXIgYXBwID0gYW5ndWxhci5tb2R1bGUoJ3NoYWRvd0xvZ2dlcicsW10pO1xyXG5cdFxyXG5cdGFwcC5jb25maWcoY29uZmlnKTtcclxuXHRjb25maWcuJGluamVjdCA9IFsnJHByb3ZpZGUnXTtcclxuXHRmdW5jdGlvbiBjb25maWcoJHByb3ZpZGUpe1xyXG5cdCAgICAkcHJvdmlkZS5kZWNvcmF0b3IoJyRsb2cnLCBsb2dEZWNvcmF0b3IpO1xyXG5cdFx0bG9nRGVjb3JhdG9yLiRpbmplY3QgPSBbJyRkZWxlZ2F0ZScsJ3NoYWRvd0xvZ2dlciddO1xyXG4gICAgXHRcclxuXHRcdGZ1bmN0aW9uIGxvZ0RlY29yYXRvcigkZGVsZWdhdGUsc2hhZG93TG9nZ2VyKXtcclxuXHRcdFx0IHJldHVybiB7XHJcblx0XHRcdFx0IGVycm9yOmZ1bmN0aW9uKGV4Y2VwdGlvbixtZXNzYWdlKXtcclxuXHRcdFx0XHRcdCAkZGVsZWdhdGUuZXJyb3IoZXhjZXB0aW9uLG1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0IHNoYWRvd0xvZ2dlci5lcnJvcihleGNlcHRpb24sbWVzc2FnZSk7XHJcblx0XHRcdFx0IH0sXHJcblx0XHRcdFx0IGluZm86ZnVuY3Rpb24obWVzc2FnZSl7XHJcblx0XHRcdFx0XHQgJGRlbGVnYXRlLmluZm8obWVzc2FnZSk7XHJcblx0XHRcdFx0XHQgc2hhZG93TG9nZ2VyLmluZm8obWVzc2FnZSk7XHJcblx0XHRcdFx0IH0sXHJcblx0XHRcdFx0IHdhcm46ZnVuY3Rpb24obWVzc2FnZSl7XHJcblx0XHRcdFx0XHQgICRkZWxlZ2F0ZS53YXJuKG1lc3NhZ2UpO1xyXG5cdFx0XHRcdFx0IHNoYWRvd0xvZ2dlci53YXJuKG1lc3NhZ2UpO1xyXG5cdFx0XHRcdCB9LFxyXG5cdFx0XHRcdGRlYnVnOmZ1bmN0aW9uKG1lc3NhZ2Upe1xyXG5cdFx0XHRcdFx0ICAkZGVsZWdhdGUuZGVidWcobWVzc2FnZSk7XHJcblx0XHRcdFx0XHQgc2hhZG93TG9nZ2VyLmRlYnVnKG1lc3NhZ2UpO1xyXG5cdFx0XHRcdCB9LFxyXG5cdFx0XHRcdCBsb2c6ZnVuY3Rpb24obWVzc2FnZSl7XHJcblx0XHRcdFx0XHQgICRkZWxlZ2F0ZS5sb2cobWVzc2FnZSk7XHJcblx0XHRcdFx0XHQgc2hhZG93TG9nZ2VyLmluZm8obWVzc2FnZSk7XHJcblx0XHRcdFx0IH1cclxuXHRcdFx0IH07XHJcblx0XHR9O1xyXG5cdH07XHJcbn0pKCk7XHJcbiIsIihmdW5jdGlvbigpe1xyXG4gIFwidXNlIHN0cmljdFwiXHJcblx0dmFyIGFwcCA9IGFuZ3VsYXIubW9kdWxlKCdzaGFkb3dMb2dnZXInKVxyXG4gIFxyXG4gICAgYXBwLnByb3ZpZGVyKFwic2hhZG93TG9nZ2VyXCIsc2hhZG93TG9nZ2VyUHJvdmlkZXIpOyAgICAgICAgICAgIFxyXG4gIFxyXG4gICAgZnVuY3Rpb24gc2hhZG93TG9nZ2VyUHJvdmlkZXIoKSB7XHJcbiAgICAgIHRoaXMuc2V0T3B0aW9ucyA9IGZ1bmN0aW9uKHVzZXJPcHRpb25zKXtcclxuICAgICAgICAgIG9wdGlvbnMgPSAkLmV4dGVuZChvcHRpb25zLHVzZXJPcHRpb25zLHRydWUpO1xyXG4gICAgICB9XHJcbiAgICAgICB0aGlzLiRnZXQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgICAgICAgcmV0dXJuIHNoYWRvd0xvZ2dlcigpO1xyXG4gICAgICAgICAgfVxyXG4gICAgfTtcclxuICAgIHZhciBvcHRpb25zID0ge1xyXG4gICAgICBsb2dnaW5nVXJsOicnLFxyXG4gICAgICBpbmZvTWVzc2FnZTona2lyaycsXHJcbiAgICAgIGxvZ0FsZXJ0OmZhbHNlXHJcbiAgICAgIFxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gc2hhZG93TG9nZ2VyKCl7XHJcbiAgICAgXHJcbiAgICAgcmV0dXJuIHtcclxuICAgICAgZXJyb3I6ZnVuY3Rpb24oZXhjZXB0aW9uLG1lc3NhZ2Upe1xyXG4gICAgICAgIGxvZyhleGNlcHRpb24pO1xyXG4gICAgICB9LFxyXG4gICAgICBpbmZvOmZ1bmN0aW9uKG1lc3NhZ2Upe1xyXG4gICAgICAgICAgbG9nKG1lc3NhZ2UpO1xyXG4gICAgICB9LFxyXG4gICAgICBkZWJ1ZzpmdW5jdGlvbihtZXNzYWdlKXtcclxuICAgICAgICBsb2cobWVzc2FnZSk7IFxyXG4gICAgICB9LFxyXG4gICAgICB3YXJuOmZ1bmN0aW9uKG1lc3NhZ2Upe1xyXG4gICAgICAgIGxvZyhtZXNzYWdlKTtcclxuICAgICAgfSxcclxuICAgICAgbG9nOmZ1bmN0aW9uKG1lc3NhZ2Upe1xyXG4gICAgICAgIGxvZyhtZXNzYWdlKTtcclxuICAgICAgfVxyXG4gICAgfTtcclxuICAgIFxyXG4gICAgZnVuY3Rpb24gbG9nKG1lc3NhZ2Upe1xyXG4gICAgICBpZihvcHRpb25zLmxvZ0FsZXJ0KXtcclxuICAgICAgICBhbGVydChtZXNzYWdlKTtcclxuICAgICAgfVxyXG4gICAgICBlbHNlIGlmKGNvbnNvbGUpe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xyXG4gICAgICB9XHJcbiAgICAgIGVsc2V7XHJcbiAgICAgICAgICBhbGVydChtZXNzYWdlKTtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0gICAgICAgICAgICAgICAgICAgICAgIFxyXG59KSgpO1xyXG5cclxuIiwiLy8gKGZ1bmN0aW9uKCl7XHJcbi8vICAgYW5ndWxhci5tb2R1bGUoJ3NoYWRvd0xvZ2dlcicpLnNlcnZpY2UoJ3NoYWRvd0xvZ2dlclNlcnZpY2UnLHNoYWRvd0xvZ2dlcik7XHJcbi8vIFxyXG4vLyAgIGZ1bmN0aW9uIHNoYWRvd0xvZ2dlcigpe1xyXG4vLyAgICAgdmFyIHZtID0ge1xyXG4vLyAgICAgICBlcnJvcjpmdW5jdGlvbihleGNlcHRpb24sbWVzc2FnZSl7XHJcbi8vICAgICAgICAgbG9nKGV4Y2VwdGlvbik7XHJcbi8vICAgICAgIH0sXHJcbi8vICBcclxuLy8gICAgICAgaW5mbzpmdW5jdGlvbihtZXNzYWdlKXtcclxuLy8gICAgICAgICAgIGxvZyhtZXNzYWdlKTtcclxuLy8gICAgICAgfSxcclxuLy8gICAgICAgZGVidWc6ZnVuY3Rpb24obWVzc2FnZSl7XHJcbi8vICAgICAgICAgbG9nKG1lc3NhZ2UpOyBcclxuLy8gICAgICAgfSxcclxuLy8gICAgICAgd2FybjpmdW5jdGlvbihtZXNzYWdlKXtcclxuLy8gICAgICAgICBsb2cobWVzc2FnZSk7XHJcbi8vICAgICAgIH0sXHJcbi8vIFx0ICAgICBzZXRPcHRpb25zOmZ1bmN0aW9uKHVzZXJPcHRpb25zKXtcclxuLy8gICAgICAgICBvcHRpb25zID0gdXNlck9wdGlvbnM7XHJcbi8vIFx0ICAgfVxyXG4vLyAgICAgfVxyXG4vLyAgICAgcmV0dXJuIHZtO1xyXG4vLyAgICAgZnVuY3Rpb24gbG9nKG1lc3NhZ2Upe1xyXG4vLyAgICAgICBpZihvcHRpb25zLmxvZ0FsZXJ0KXtcclxuLy8gICAgICAgICBhbGVydChtZXNzYWdlKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgICBlbHNlIGlmKGNvbnNvbGUpe1xyXG4vLyAgICAgICAgIGNvbnNvbGUubG9nKG1lc3NhZ2UpO1xyXG4vLyAgICAgICB9XHJcbi8vICAgICAgIGVsc2V7XHJcbi8vICAgICAgICAgICBhbGVydChtZXNzYWdlKTtcclxuLy8gICAgICAgfVxyXG4vLyAgICAgfVxyXG4vLyAgICAgdmFyIG9wdGlvbnMgPSB7fTtcclxuLy8gICB9XHJcbi8vICB9KSgpO1xyXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
